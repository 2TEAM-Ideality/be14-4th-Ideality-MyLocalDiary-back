<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.leesang.mylocaldiary.member.mybatis.Mapper.MemberMapper">
    <resultMap id="MemberInfoMap" type="com.leesang.mylocaldiary.member.mybatis.dto.MemberInfoDTO">
        <id property="memberId" column="id"/>
        <result property="loginId" column="login_id"/>
        <result property="email" column="email"/>
        <result property="nickname" column="nickname"/>
        <result property="bio" column="bio"/>
        <result property="profileImage" column="profile_image"/>
        <result property="profileMusic" column="profile_music"/>
        <result property="status" column="status"/>
        <result property="role" column="role"/>
        <result property="isPublic" column="is_public"/>
    </resultMap>

    <resultMap id="OtherMemberInfoMap" type="com.leesang.mylocaldiary.member.mybatis.dto.OtherMemberInfoDTO">
        <id property="id" column="id"/>
        <result property="nickname" column="nickname"/>
        <result property="bio" column="bio"/>
        <result property="profileImage" column="profile_image"/>
        <result property="profileMusic" column="profile_music"/>
        <result property="isPublic" column="is_public"/>
    </resultMap>

    <!-- 로그인한 유저 정보 가져오기 -->
    <select id="selectMemberInfo"
            resultMap="MemberInfoMap"
            parameterType="_long">
        SELECT
               id
             , login_id
             , email
             , nickname
             , bio
             , profile_image
             , profile_music
             , status
             , role
             , is_public
          FROM member
         WHERE id = #{memberId}
    </select>

<<<<<<< HEAD
    <!--  팔로잉 or 공개 계정 유저 정보 가져오기  -->
    <select id="selectOtherMemberInfo"
            resultMap="OtherMemberInfoMap"
=======

    <resultMap id="SearchMemberMap" type="com.leesang.mylocaldiary.member.mybatis.dto.SearchMemberDTO">
        <id property="memberId" column="id"/>
        <result property="nickname" column="nickname"/>
        <result property="name" column="name"/>
        <result property="profileImage" column="profile_image"/>
        <result property="isPublic" column="is_public"/>
        <result property="bio" column="bio"/>
        <result property="followStatus" column="follow_status"/>
    </resultMap>

    <select id="searchMembersWithFollowStatus"
            resultMap="SearchMemberMap"
>>>>>>> cb96826ca0ab76cb8fe99645cb0dcb88cebce8f1
            parameterType="map">
        SELECT
            m.id,
            m.nickname,
<<<<<<< HEAD
            m.bio,
            m.profile_image,
            m.profile_music,
            m.is_public
        FROM member m
        WHERE m.id = #{targetMemberId}
          AND m.role != 'ADMIN'
      AND (
            m.is_public = 1
            OR EXISTS (
                SELECT 1 FROM follow f
                WHERE f.following_member_id = #{loginMemberId}
          AND f.follow_target_member_id = #{targetMemberId}
            )
            )
=======
            m.name,
            m.profile_image,
            m.is_public,
            m.bio,
            f.status AS follow_status
        FROM member m
                 LEFT JOIN follow f
                           ON f.follow_target_member_id = m.id
                               AND f.following_member_id = #{myId}
        WHERE
            m.nickname LIKE CONCAT('%', #{nickname}, '%')
          AND m.role != 'ADMIN'
      AND m.status != 'SUSPENDED'
      AND m.id != #{myId}
>>>>>>> cb96826ca0ab76cb8fe99645cb0dcb88cebce8f1
    </select>



<<<<<<< HEAD
=======


>>>>>>> cb96826ca0ab76cb8fe99645cb0dcb88cebce8f1
</mapper>